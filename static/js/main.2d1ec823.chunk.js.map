{"version":3,"sources":["helpers/helpers.tsx","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverseGoods","setState","sortGoodsAlphabetic","ALPHABET","sortGoodsByLength","LENGTH","resetState","this","resetButtonCondition","reorderedGoods","goods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAAKA,E,kGAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SCmBAA,E,OAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,WACb,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,oBAAsB,WACpB,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAdzB,EAkBEC,kBAAoB,WAClB,EAAKH,SAAS,CACZH,SAAUL,EAASY,UApBzB,EAwBEC,WAAa,WACX,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAuBX,GAAcC,IAAaL,EAASM,KAC3DU,EDrDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENc,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQhB,GACN,KAAKL,EAASU,SACZ,OAAOU,EAAUE,cAAcD,GACjC,KAAKrB,EAASY,OACZ,OAAOQ,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAITnB,GACFc,EAAaM,UAGRN,ECgCkBO,CAAkBxB,EAAiBa,KAAKX,OAE/D,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYvB,IAAaL,EAASU,WAGtCmB,QAASf,KAAKL,oBAPhB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYvB,IAAaL,EAASY,SAGtCiB,QAASf,KAAKH,kBAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAaxB,IAGjByB,QAASf,KAAKP,aAPhB,qBAWCQ,GACC,wBACEY,KAAK,SACLD,UAAU,mBACVG,QAASf,KAAKD,WAHhB,sBAUJ,6BACE,6BACGG,EAAec,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,kBAxFlC,GAAyBC,aC3BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d1ec823.chunk.js","sourcesContent":["enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n","import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { getReorderedGoods } from './helpers/helpers';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortGoodsAlphabetic = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  resetState = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const resetButtonCondition = isReversed || sortType !== SortType.NONE;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info', {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortGoodsAlphabetic}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortGoodsByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning', {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n          {resetButtonCondition && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={this.resetState}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}